[
    {
        "name": "VFO",
        "cpp": "\n/**\n * This is a VFO with modulated:(sine, square, triangle, saw) + string,whiteNoise,pinkNoise and sweeper\n */\nclass VFO\n{\n public:\n    AudioSynthWaveformModulated      sine;\n    AudioSynthWaveformModulated      square;\n    AudioSynthWaveformModulated      triangle;\n    AudioSynthWaveformModulated      saw;\n    AudioSynthKarplusStrong          string;\n    AudioSynthNoiseWhite             white;\n    AudioSynthNoisePink              pink;\n    AudioMixer4                      mix1;\n    AudioSynthToneSweep              sweeper;\n    AudioMixer4                      mix2;\n    AudioConnection                  *patchCord[8]; // total patchCordCount:8 including array typed ones.\n\n    VFO() // constructor (this is called when class-object is created)\n    {\n        int pci = 0; // used only for adding new patchcords\n\n        patchCord[pci++] = new AudioConnection(sine, 0, mix1, 0);\n        patchCord[pci++] = new AudioConnection(square, 0, mix1, 1);\n        patchCord[pci++] = new AudioConnection(triangle, 0, mix1, 2);\n        patchCord[pci++] = new AudioConnection(saw, 0, mix1, 3);\n        patchCord[pci++] = new AudioConnection(string, 0, mix2, 0);\n        patchCord[pci++] = new AudioConnection(white, 0, mix2, 1);\n        patchCord[pci++] = new AudioConnection(pink, 0, mix2, 2);\n        patchCord[pci++] = new AudioConnection(sweeper, 0, mix2, 3);\n    }\n\n    void begin()\n    {\n        sine.begin(WAVEFORM_SINE);\n        square.begin(WAVEFORM_SQUARE);\n        triangle.begin(WAVEFORM_TRIANGLE);\n        saw.begin(WAVEFORM_SAWTOOTH);\n        string.noteOff(0);\n        white.amplitude(0);\n        pink.amplitude(0);\n        for (int i = 0; i < 4; i++)\n        {\n            mix1.gain(i, 0.125);\n            mix2.gain(i, 0.125);\n        }\n    }\n    \n};\n"
    },
    {
        "name": "LFO_A",
        "cpp": "\n/**\n * This is LFO with 4 modulated filter generators (sine,square,pulse,triangle)\n */\nclass LFO_A\n{\n public:\n    AudioSynthWaveformDc             pulseFilterDutyCycle;\n    AudioSynthWaveformModulated      sineFilter;\n    AudioSynthWaveformModulated      squareFilter;\n    AudioSynthWaveformModulated      pulseFilter;\n    AudioSynthWaveformModulated      triangleFilter;\n    AudioMixer4                      filterMix;\n    AudioConnection                  *patchCord[5]; // total patchCordCount:5 including array typed ones.\n\n    LFO_A() // constructor (this is called when class-object is created)\n    {\n        int pci = 0; // used only for adding new patchcords\n\n        patchCord[pci++] = new AudioConnection(pulseFilterDutyCycle, 0, pulseFilter, 1);\n        patchCord[pci++] = new AudioConnection(sineFilter, 0, filterMix, 0);\n        patchCord[pci++] = new AudioConnection(squareFilter, 0, filterMix, 1);\n        patchCord[pci++] = new AudioConnection(pulseFilter, 0, filterMix, 2);\n        patchCord[pci++] = new AudioConnection(triangleFilter, 0, filterMix, 3);\n    }\n\n    void begin()\n    {\n        sineFilter.begin(WAVEFORM_SINE);\n        squareFilter.begin(WAVEFORM_SQUARE);\n        pulseFilter.begin(WAVEFORM_PULSE);\n        triangleFilter.begin(WAVEFORM_TRIANGLE);\n        filterMix.gain(0, 0.25);\n        filterMix.gain(1, 0.25);\n        filterMix.gain(2, 0.25);\n        filterMix.gain(3, 0.25);\n    }\n    \n};\n"
    },
    {
        "name": "LFO_B",
        "cpp": "\n/**\n * This is LFO with 2 modulators (saw,sampleHold)\n */\nclass LFO_B\n{\n public:\n    AudioSynthWaveformModulated      sawMod;\n    AudioSynthWaveformModulated      sampleholdMod;\n    AudioMixer<2>                    modMix;\n    AudioConnection                  *patchCord[2]; // total patchCordCount:2 including array typed ones.\n\n    LFO_B() // constructor (this is called when class-object is created)\n    {\n        int pci = 0; // used only for adding new patchcords\n\n        patchCord[pci++] = new AudioConnection(sawMod, 0, modMix, 0);\n        patchCord[pci++] = new AudioConnection(sampleholdMod, 0, modMix, 1);\n    }\n\n    void begin()\n    {\n        sawMod.begin(WAVEFORM_SAWTOOTH);\n        sampleholdMod.begin(WAVEFORM_SAMPLE_HOLD);\n        modMix.gain(0, 0.5);\n        modMix.gain(1, 0.5);\n    }\n    \n};\n"
    },
    {
        "name": "NoteGen",
        "cpp": "\n/**\n * This is a voice with two VFO:s, envelope, vfo-filter\n */\nclass NoteGen\n{\n public:\n    VFO                              VFO1;\n    VFO                              VFO2;\n    AudioMixer4                      waveMix;\n    AudioEffectEnvelope              VFOenvelope;\n    AudioMixer<2>                    VFOenvelopeMix;\n    AudioFilterStateVariable         VFOfilter;\n    AudioMixer4                      VFOfilterMix;\n    AudioConnection                  *patchCord[12]; // total patchCordCount:12 including array typed ones.\n\n    NoteGen() // constructor (this is called when class-object is created)\n    {\n        int pci = 0; // used only for adding new patchcords\n\n        patchCord[pci++] = new AudioConnection(VFO1.mix1, 0, waveMix, 0);\n        patchCord[pci++] = new AudioConnection(VFO1.mix2, 0, waveMix, 1);\n        patchCord[pci++] = new AudioConnection(VFO2.mix1, 0, waveMix, 2);\n        patchCord[pci++] = new AudioConnection(VFO2.mix2, 0, waveMix, 3);\n        patchCord[pci++] = new AudioConnection(waveMix, 0, VFOenvelope, 0);\n        patchCord[pci++] = new AudioConnection(waveMix, 0, VFOenvelopeMix, 0);\n        patchCord[pci++] = new AudioConnection(VFOenvelope, 0, VFOenvelopeMix, 1);\n        patchCord[pci++] = new AudioConnection(VFOenvelopeMix, 0, VFOfilter, 0);\n        patchCord[pci++] = new AudioConnection(VFOenvelopeMix, 0, VFOfilterMix, 0);\n        patchCord[pci++] = new AudioConnection(VFOfilter, 0, VFOfilterMix, 1);\n        patchCord[pci++] = new AudioConnection(VFOfilter, 1, VFOfilterMix, 2);\n        patchCord[pci++] = new AudioConnection(VFOfilter, 2, VFOfilterMix, 3);\n    }\n\n    void begin ()\n    {\n        VFO1.begin();\n        VFO2.begin();\n        waveMix.gain(0, 0.25);\n        waveMix.gain(1, 0.25);\n        waveMix.gain(2, 0.25);\n        waveMix.gain(3, 0.25);\n        VFOenvelopeMix.gain(0, 0.5);\n        VFOenvelopeMix.gain(1, 0.5);\n        VFOfilterMix.gain(0, 0.25);\n        VFOfilterMix.gain(1, 0.25);\n        VFOfilterMix.gain(2, 0.25);\n        VFOfilterMix.gain(3, 0.25);\n    }\n    \n};\n"
    },
    {
        "name": "NodeArraySynthMain",
        "cpp": "\n/**\n * This is a alternative synth main that utilizes the new array structure\n */\nclass NodeArraySynthMain\n{\n public:\n    LFO_A                            LFO_A1;\n    LFO_B                            LFO_B1;\n    AudioSynthWaveformDc             VFOtuningA;\n    AudioSynthWaveformDc             VFOtuningB;\n    AudioSynthWaveformDc             PBend;\n    LFO_A                            LFO_A2;\n    AudioMixer4                      LFOmodMixA;\n    LFO_B                            LFO_B2;\n    AudioMixer4                      LFOmodMixB;\n    AudioMixer<2>                    LFOfilterMixC;\n    NoteGen                          voices[16];\n    AudioMixer<16>                   mixFinal;\n    AudioAmplifier                   ampFinal; /* this is used for easier gain adj. of mixFinal*/\n    AudioOutputI2S                   i2s3;\n    AudioControlSGTL5000 sgtl5000_1;\n    AudioConnection                  *patchCord[173]; // total patchCordCount:173 including array typed ones.\n\n    NodeArraySynthMain() // constructor (this is called when class-object is created)\n    {\n        int pci = 0; // used only for adding new patchcords\n\n        patchCord[pci++] = new AudioConnection(LFO_A1.filterMix, 0, LFOmodMixA, 0);\n        patchCord[pci++] = new AudioConnection(LFO_A1.filterMix, 0, LFOmodMixB, 0);\n        patchCord[pci++] = new AudioConnection(LFO_B1.modMix, 0, LFOmodMixA, 1);\n        patchCord[pci++] = new AudioConnection(LFO_B1.modMix, 0, LFOmodMixB, 1);\n        patchCord[pci++] = new AudioConnection(VFOtuningA, 0, LFOmodMixA, 2);\n        patchCord[pci++] = new AudioConnection(VFOtuningB, 0, LFOmodMixB, 2);\n        patchCord[pci++] = new AudioConnection(PBend, 0, LFOmodMixA, 3);\n        patchCord[pci++] = new AudioConnection(PBend, 0, LFOmodMixB, 3);\n        patchCord[pci++] = new AudioConnection(LFO_A2.filterMix, 0, LFOfilterMixC, 0);\n        patchCord[pci++] = new AudioConnection(LFO_B2.modMix, 0, LFOfilterMixC, 1);\n        patchCord[pci++] = new AudioConnection(mixFinal, 0, ampFinal, 0);\n        patchCord[pci++] = new AudioConnection(ampFinal, 0, i2s3, 0);\n        patchCord[pci++] = new AudioConnection(ampFinal, 0, i2s3, 1);\n        for (int i = 0; i < 16; i++)\n        {\n            patchCord[pci++] = new AudioConnection(LFOmodMixA, 0, voices[i].VFO1.sine, 0);\n            patchCord[pci++] = new AudioConnection(LFOmodMixA, 0, voices[i].VFO1.square, 0);\n            patchCord[pci++] = new AudioConnection(LFOmodMixA, 0, voices[i].VFO1.triangle, 0);\n            patchCord[pci++] = new AudioConnection(LFOmodMixA, 0, voices[i].VFO1.saw, 0);\n            patchCord[pci++] = new AudioConnection(LFOmodMixB, 0, voices[i].VFO2.sine, 0);\n            patchCord[pci++] = new AudioConnection(LFOmodMixB, 0, voices[i].VFO2.square, 0);\n            patchCord[pci++] = new AudioConnection(LFOmodMixB, 0, voices[i].VFO2.triangle, 0);\n            patchCord[pci++] = new AudioConnection(LFOmodMixB, 0, voices[i].VFO2.saw, 0);\n            patchCord[pci++] = new AudioConnection(LFOfilterMixC, 0, voices[i].VFOfilter, 1);\n            patchCord[pci++] = new AudioConnection(voices[i].VFOfilterMix, 0, mixFinal, i);\n        }\n    }\n\n    void begin()\n    {\n        LFO_A1.begin();\n        LFO_A2.begin();\n        LFO_B1.begin();\n        LFO_B2.begin();\n        for (int i = 0; i < 16; i++)\n        {\n            voices[i].begin();\n            mixFinal.gain(i, 1.0/16); // set equal gain\n        }\n        for (int i = 0; i < 4; i++)\n        {\n             LFOmodMixA.gain(i, 0.25);\n             LFOmodMixB.gain(i, 0.25);\n        }\n        LFOfilterMixC.gain(0, 0.5);\n        LFOfilterMixC.gain(1, 0.5);\n    }\n    \n};\n"
    }
]